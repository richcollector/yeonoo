<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.noo.wms.main.mapper.MainSQLMapper">

	<!-- 관리자 로그인 -->
	<select id="selectByAdminEmailAndPw" resultType="com.noo.wms.vo.AdminVo">
		select * from Admin
		where admin_email = #{admin_email}
		and admin_password = #{admin_password}
	</select>

	<!-- 사원 회원가입 -->
	<insert id="insertEmployee">
		insert into Employee(
			company_code,
			department_code,
			employee_rank_code,
			authority_code,
			employee_email,
			employee_password,
			employee_name,
			employee_state,
			employee_join_date,
			employee_leave_date
		) values (
			#{company_code},
			#{department_code},
			'rank_code',
			'1',
			#{employee_email},
			#{employee_password},
			#{employee_name},
			'T',
			SYSDATE(),
			null
		)
		<selectKey keyColumn="employee_code" keyProperty="employee_code" resultType="com.noo.wms.vo.EmployeeVo" order="AFTER">
		      select employee_code from Employee 
    		  ORDER BY employee_code DESC LIMIT 1
		</selectKey>
	</insert>
	
	<select id="selectRankCode" resultType="string">
		select employee_rank_code
		from Employee_rank
		where company_code = #{company_code}
		LIMIT 1
	</select>
	
	<update id="updateRankCode">
		update Employee
		set employee_rank_code = #{employee_rank_code}
		where company_code = #{company_code}
		and employee_code = #{employee_code}
	</update>
		
	<!-- 사원 로그인 -->
	<select id="selectByEmployeeEmailAndPw" resultType="com.noo.wms.vo.EmployeeVo">
		<!-- select * from Employee
		where employee_email = #{employee_email}
		and employee_password = #{employee_password} -->
		
		select *
		from Employee e ,MailAuth m
		where e.employee_code = m.employee_code
		and e.employee_email = #{employee_email}
		and e.employee_password = #{employee_password}
		and m.auth_complete = 'Y'
		
	</select>

	<!-- 회원가입시 회사 코드 불러오기 -->	
	<select id="selectCompanyCode" resultType="com.noo.wms.vo.CompanyVo">
		select company_code from Company
		order by company_code asc
	</select>
	
	<!-- 회원가입시 회사코드로 부서코드 불러오기 -->
	<select id="selectDepCodeByCompanyCode" resultType="com.noo.wms.vo.DepartmentVo">	
		select * from Department
		where company_code = #{company_code}
	</select>
	
	<!-- 회원가입시 이메일 중복확인 -->
	<select id="selectEmployeeEmailByEmail" resultType="com.noo.wms.vo.EmployeeVo">
		select * from Employee
		where employee_email = #{employee_email}
	</select>
	
	<!-- 회원가입 메일 인증 -->
	<insert id="insertMailAuth">
		INSERT INTO MailAuth(
			employee_code,
			auth_key,
			auth_complete,
			auth_date
		) VALUES (
			#{employee_code}, 
			#{auth_key},
			'N',
			null
		)	
	</insert>
	
	<update id="updateCompleteY">
		UPDATE MailAuth 
		SET auth_complete = 'Y' , auth_date = SYSDATE() 
		WHERE auth_key = #{auth_key}
	</update>
	
	<!-- 공지사항 작성 -->
	<insert id="insertNotice">
		insert into Notice(
			admin_code,
			company_code,
			notice_title,
			notice_content,
			notice_write_date
		) values (
			#{admin_code},
			#{company_code},
			#{notice_title},
			#{notice_content},
			SYSDATE()
		)
	</insert>
	
	<!-- 공지사항 데이터 불러오기 -->
	<select id="selectNotice" resultType="com.noo.wms.vo.NoticeVo">
		select * from Notice
		order by notice_code desc
	</select>
	
	<!-- 공지사항 상세보기 -->
	<select id="selectNoticeByNoticeCode" resultType="com.noo.wms.vo.NoticeVo">
		select * from Notice
		where notice_code = #{notice_code}
	</select>
	
	<!-- 공지사항 삭제 -->
	<delete id="deleteNoticeByNoticeCode">
		delete from Notice
		where notice_code = #{notice_code}
	</delete>
	
	<!-- 비밀번호 변경 -->
	<update id="updateEmployeePw">
		UPDATE Employee
		SET employee_password = #{employee_password}
		WHERE employee_code = #{employee_code}
		AND company_code = #{company_code}
	</update> 
	
	<!-- 사원 목록 전체 불러오기 및 검색 -->
	<select id="employeeInfo" resultType="map">		
		SELECT 
			e.employee_code,
			e.company_code,
			e.department_code,
			d.department_name,
			e.employee_rank_code,
			er.employee_rank_name,
			e.employee_name,
			e.employee_email,
			e.employee_state,
			e.employee_join_date,
			e.employee_leave_date 
		FROM Employee e
		LEFT JOIN Department d ON e.department_code = d.department_code
		JOIN Employee_rank er ON e.employee_rank_code = er.employee_rank_code
			<trim prefix="WHERE" prefixOverrides="AND|OR">			
				<if test="searchType=='employee_code' and searchWord != null and searchWord != '' ">				
					AND employee_code like CONCAT('%', #{searchWord}, '%')			
				</if>			
				<if test="searchType=='department_code' and searchWord != null and searchWord != '' ">				
					AND department_code like CONCAT('%', #{searchWord}, '%')			
				</if>	
				<if test="searchType=='employee_rank_code' and searchWord != null and searchWord != '' ">				
					AND employee_rank_code like CONCAT('%', #{searchWord}, '%')			
				</if>	
				<if test="searchType=='employee_name' and searchWord != null and searchWord != '' ">				
					AND employee_name like CONCAT('%', #{searchWord}, '%')			
				</if>	
			</trim>		
		WHERE e.company_code = #{company_code}
		LIMIT #{startList}, 15
	</select>

	<!-- 사원목록 페이징 -->
	<select id="employeeInfoCount" resultType="int">
		SELECT COUNT(*) FROM Employee e
		LEFT join Department d ON e.department_code = d.department_code
		join Employee_rank er on e.employee_rank_code = er.employee_rank_code
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="searchWord != null and searchWord != '' ">			
				<if test="searchType=='employee_code' and searchWord != null and searchWord != '' ">				
					AND employee_code like CONCAT('%', #{searchWord}, '%')			
				</if>			
				<if test="searchType=='department_code' and searchWord != null and searchWord != '' ">				
					AND department_code like CONCAT('%', #{searchWord}, '%')			
				</if>	
				<if test="searchType=='employee_rank_code' and searchWord != null and searchWord != '' ">				
					AND employee_rank_code like CONCAT('%', #{searchWord}, '%')			
				</if>	
				<if test="searchType=='employee_name' and searchWord != null and searchWord != '' ">				
					AND employee_name like CONCAT('%', #{searchWord}, '%')			
				</if>		
			</if>
		</trim>
		WHERE e.company_code = #{company_code}
	</select>
	
	<!-- 사원 목록 체크박스 선택 -->
	<select id="selectEmployeeInfo" resultType="com.noo.wms.vo.EmployeeVo">
		SELECT * FROM Employee
		WHERE employee_code = #{employee_code}
		and company_code = #{company_code}
	</select>
	
	<!-- 사원 부서,직급 수정 -->
	<update id="updateEmployeeRankInfo">
		UPDATE Employee 
		SET employee_rank_code = #{employee_rank_code},
			department_code = #{department_code}
		WHERE employee_code = #{employee_code}
		AND company_code = #{company_code}
	</update>
	
	<!-- 퇴사 처리 -->
	<update id="updateEmployeeRetire">
		UPDATE Employee 
		SET employee_state = 'F' , employee_leave_date = SYSDATE() 
		WHERE employee_code = #{employee_code}
		AND company_code = #{company_code}
	</update>
	
	<select id="selectDepByCompanyCode" resultType="com.noo.wms.vo.DepartmentVo">
		SELECT * FROM Department
		WHERE company_code = #{company_code}
	</select>
	
	<!-- nav shotcut -->
	<select id="navShotCut" resultType="com.noo.wms.vo.ShotcutVo">
		SELECT * FROM Shotcut
		WHERE shotcut_name LIKE CONCAT('%',#{shotcut_name},'%')
	</select>
	
</mapper>